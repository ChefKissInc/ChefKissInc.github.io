<!-- Modified from Starlight -->
---
import { AstroError } from "astro/errors";
import { slugToLocaleData, urlToSlug } from "../../node_modules/@astrojs/starlight/utils/slugs";
import { useTranslations } from "../../node_modules/@astrojs/starlight/utils/translations";
import { Icon } from "astro-icon/components";

const asideVariants = ["note", "tip", "caution", "danger"] as const;
const icons = { note: "ph:info-duotone", tip: "ph:lightbulb-duotone", caution: "ph:warning-duotone", danger: "ph:warning-octagon-duotone" } as const;

interface Props {
	type?: (typeof asideVariants)[number];
	title?: string;
}

let { type = "note", title } = Astro.props;

if (!asideVariants.includes(type)) {
	throw new AstroError(
		"Invalid `type` prop passed to the `<Aside>` component.\n",
		`Received: ${JSON.stringify(type)}\n` +
			`Expected one of ${asideVariants.map((i) => JSON.stringify(i)).join(", ")}`
	);
}

if (!title) {
	const { locale } = slugToLocaleData(urlToSlug(Astro.url));
	title = useTranslations(locale)(`aside.${type}`);
}
---

<aside aria-label={title} class={`starlight-aside starlight-aside--${type}`}>
	<p class="starlight-aside__title" aria-hidden="true">
		<Icon name={icons[type]} class="starlight-aside__icon" />{title}
	</p>
	<section class="starlight-aside__content">
		<slot />
	</section>
</aside>
